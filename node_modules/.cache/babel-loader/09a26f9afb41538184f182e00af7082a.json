{"ast":null,"code":"var _jsxFileName = \"/home/stina/Documents/job-homework/arvato/Tv-Show-Search-App/src/Components/AboutShow/AboutShow.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { CircularProgress, Tooltip, Grid, Paper, Button } from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport Rating from \"@material-ui/lab/Rating\";\nexport default function AboutShow() {\n  const classes = useStyles();\n  const [show, setShow] = useState();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`https://api.tvmaze.com/shows/${id}`).then(res => res.json()).then(data => setShow(data)).catch(err => console.log(err));\n  }, [id]);\n  return show !== undefined ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    component: \"main\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: false,\n    sm: 4,\n    md: 7,\n    className: classes.image,\n    style: {\n      backgroundImage: show.image ? `url(${show.image.original})` : `url(${show.image})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, show.name), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    title: `IMDB rating: ${show.rating.average}`,\n    \"aria-label\": \"rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"fit-content\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Rating, {\n    name: \"read-only\",\n    value: show.rating.average / 2,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: show.summary,\n    escapeHtml: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/show/${show.id}/episodes`,\n    style: {\n      textDecoration: \"none\",\n      marginRight: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Episodes\"))))) : /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/stina/Documents/job-homework/arvato/Tv-Show-Search-App/src/Components/AboutShow/AboutShow.tsx"],"names":["React","useState","useEffect","Typography","useParams","Link","useStyles","CircularProgress","Tooltip","Grid","Paper","Button","ReactMarkdown","Rating","AboutShow","classes","show","setShow","id","fetch","then","res","json","data","catch","err","console","log","undefined","root","image","backgroundImage","original","paper","name","rating","average","width","summary","textDecoration","marginRight"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useStyles } from \"./style\";\nimport { Show } from \"../ShowInterface\";\nimport {\n  CircularProgress,\n  Tooltip,\n  Grid,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport ReactMarkdown from \"react-markdown\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nexport default function AboutShow(): ReactElement {\n  const classes = useStyles();\n\n  const [show, setShow] = useState<Show>();\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetch(`https://api.tvmaze.com/shows/${id}`)\n      .then((res) => res.json())\n      .then((data) => setShow(data))\n      .catch((err) => console.log(err));\n  }, [id]);\n  return show !== undefined ? (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        className={classes.image}\n        style={{ backgroundImage: show.image ? `url(${show.image.original})` : `url(${show.image})` }}\n      />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography variant=\"h3\" color=\"textSecondary\">\n            {show.name}\n          </Typography>\n          <Tooltip\n            placement=\"right\"\n            title={`IMDB rating: ${show.rating.average}`}\n            aria-label=\"rating\"\n          >\n            <div style={{ width: \"fit-content\" }}>\n              <Rating\n                name=\"read-only\"\n                value={show.rating.average / 2}\n                readOnly\n              />\n            </div>\n          </Tooltip>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <ReactMarkdown source={show.summary} escapeHtml={false} />\n          </Typography>\n          <Link\n            to={`/show/${show.id}/episodes`}\n            style={{ textDecoration: \"none\", marginRight: \"auto\" }}\n          >\n            <Button variant=\"outlined\">Episodes</Button>\n          </Link>\n        </div>\n      </Grid>\n    </Grid>\n  ) : (\n    <CircularProgress color=\"secondary\" />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}