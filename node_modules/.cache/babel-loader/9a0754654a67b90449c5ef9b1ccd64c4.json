{"ast":null,"code":"var _jsxFileName = \"/home/stina/Documents/job-homework/arvato/Tv-Show-Search-App/src/Components/ShowCards/ShowCards.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport _ from \"lodash\";\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button, Container, Grid } from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport Hero from \"./Hero/Hero\";\nimport Footer from \"./Footer/Footer\";\nimport { Link } from \"react-router-dom\";\nexport default function ShowCards() {\n  const classes = useStyles();\n  const [shows, setShows] = useState([]);\n  const [, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"https://api.tvmaze.com/shows\").then(res => res.json()).then(data => setShows(data)).then(() => setLoading(false)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hero, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heroContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: classes.cardGrid,\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, shows.slice(0, 21).map(it => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: _.uniqueId(\"id_\"),\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: it.image.original,\n    title: \"Image title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, it.name), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: it.summary.slice(0, 150) + \"...\",\n    escapeHtml: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/show/${it.id}`,\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Read More\")), /*#__PURE__*/React.createElement(Link, {\n    to: `/show/${it.id}/episodes`,\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Episodes\")))))))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/stina/Documents/job-homework/arvato/Tv-Show-Search-App/src/Components/ShowCards/ShowCards.tsx"],"names":["React","useState","useEffect","ReactMarkdown","_","Card","CardMedia","CardContent","Typography","CardActions","Button","Container","Grid","useStyles","Hero","Footer","Link","ShowCards","classes","shows","setShows","setLoading","fetch","then","res","json","data","catch","err","console","log","heroContent","cardGrid","slice","map","it","uniqueId","card","cardMedia","image","original","cardContent","name","summary","id","textDecoration"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport _ from \"lodash\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport Hero from \"./Hero/Hero\";\nimport Footer from \"./Footer/Footer\";\nimport { Show } from \"../ShowInterface\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ShowCards(): ReactElement {\n  const classes = useStyles();\n  const [shows, setShows] = useState<Show[]>([]);\n  const [, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"https://api.tvmaze.com/shows\")\n      .then((res) => res.json())\n      .then((data) => setShows(data))\n      .then(() => setLoading(false))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <main>\n        <Hero />\n        <div className={classes.heroContent}>\n          <Container className={classes.cardGrid} maxWidth=\"md\">\n            <Grid container spacing={4}>\n              {shows.slice(0, 21).map((it) => (\n                <Grid item key={_.uniqueId(\"id_\")} xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image={it.image.original}\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {it.name}\n                      </Typography>\n                      <Typography>\n                        <ReactMarkdown\n                          source={it.summary.slice(0, 150) + \"...\"}\n                          escapeHtml={false}\n                        />\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Link\n                        to={`/show/${it.id}`}\n                        style={{ textDecoration: \"none\" }}\n                      >\n                        <Button variant=\"outlined\">Read More</Button>\n                      </Link>\n                      <Link\n                        to={`/show/${it.id}/episodes`}\n                        style={{ textDecoration: \"none\" }}\n                      >\n                        <Button color=\"secondary\" variant=\"outlined\">\n                          Episodes\n                        </Button>\n                      </Link>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </div>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}